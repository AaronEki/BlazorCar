@inject ICarService CarService
@implements IDisposable

<ul class="list-unstyled"> 
    <!-- for loop for every car in the CarService list - display the following code --> 
    @foreach (var car in CarService.Cars)
    {
        <li class="media my-3">
            <div class="media-img-wrapper mr-2">
                <a href="/car/@car.Id">
                     <img class="media-img" src="@car.Image" alt="@car.Title" />                   
                </a>
            </div>
            <div class="media-body">
                <a href="/car/@car.Id">
                    <h4 class="mb-0">@car.Title</h4>    
                </a>
                <p>@car.Description</p>                
                <h5 class="price">
                    @GetPriceText(car)
                </h5>
            </div>
        </li>
    }
</ul>

@code {
    // carlist functionality heavy based on (PatrickGod, 2020)
    // loading the list of cars from the CarService.cs file 
    protected override void OnInitialized()
    {        
        CarService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CarService.OnChange -= StateHasChanged;
    }

    //finding the price of the cheapest variant of the car
    //if there is no variants then we return empty string - else we will use the cheapest price to display
    private string GetPriceText(Car car){
        var variants = car.Variants;
        if(variants.Count==0){
            return string.Empty;
        }
        else if(variants.Count == 1){
            return $"£{variants[0].Price}";
        }
        decimal minPrice = variants.Min(v => v.Price);
        return $"£{minPrice}";
    }
}
