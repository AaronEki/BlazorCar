@page "/cart"
@inject ICartService CartService

<h3>Payment Cart</h3>

@if(cartItems == null || cartItems.Count <=0){
    <span>No items in the cart.</span>
}

else{
    <div>
        @foreach(var item in cartItems){
            <div class="item-container">
                <div class="item-image-wrapper">
                    <img src="@item.Image" class="item-image" />
                </div>
                <div class="item-name">
                    <h5>
                        <a href="/car/@item.CarId">@item.CarTitle</a>
                    </h5>
                    <span style="padding-right:10px">@item.EditionName   </span>
                    <button class="btn-delete" @onclick="@(() => DeleteItem(item))">
                        Delete
                    </button>
                </div>
                <div class="item-price">
                       £@item.Price
                </div>
            </div>

        }
        <div class="item-price">
            Total (@cartItems.Count) : £@cartItems.Sum( item => item.Price)
        </div>
        <div class="payment-type">
            <button class="btn-pay">
                Pay in Cash
            </button>
        </div>
    </div>
}


@code {
    List<CartItem> cartItems = new List<CartItem>();

    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task DeleteItem(CartItem item){
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }
}